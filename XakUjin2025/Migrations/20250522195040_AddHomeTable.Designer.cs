// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace XakUjin2025.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522195040_AddHomeTable")]
    partial class AddHomeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("XakUjin2025.Apartment", b =>
                {
                    b.Property<int>("ApartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ApartmentId"));

                    b.Property<string>("ApartmentTitle")
                        .HasColumnType("longtext");

                    b.Property<int?>("ApplicationUserUserId")
                        .HasColumnType("int");

                    b.Property<int>("HomeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ApartmentId");

                    b.HasIndex("ApplicationUserUserId");

                    b.HasIndex("HomeId");

                    b.HasIndex("UserId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("XakUjin2025.ApplicationUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailConfirmationCode")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("XakUjin2025.Home", b =>
                {
                    b.Property<int>("IdHome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHome"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdHome");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("XakUjin2025.Indication", b =>
                {
                    b.Property<int>("IndicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IndicationId"));

                    b.Property<string>("IndicationLabel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IndicationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("IndicationValue")
                        .HasColumnType("double");

                    b.Property<int>("SignalId")
                        .HasColumnType("int");

                    b.HasKey("IndicationId");

                    b.HasIndex("SignalId");

                    b.ToTable("Indications");
                });

            modelBuilder.Entity("XakUjin2025.InvalidToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TokenId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("InvalidTokens");
                });

            modelBuilder.Entity("XakUjin2025.Signal", b =>
                {
                    b.Property<int>("SignalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SignalId"));

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("SignalSN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SignalId");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Signals");
                });

            modelBuilder.Entity("XakUjin2025.Apartment", b =>
                {
                    b.HasOne("XakUjin2025.ApplicationUser", null)
                        .WithMany("Apartments")
                        .HasForeignKey("ApplicationUserUserId");

                    b.HasOne("XakUjin2025.Home", "Home")
                        .WithMany("Apartments")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XakUjin2025.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("XakUjin2025.Indication", b =>
                {
                    b.HasOne("XakUjin2025.Signal", "Signal")
                        .WithMany("Indications")
                        .HasForeignKey("SignalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Signal");
                });

            modelBuilder.Entity("XakUjin2025.Signal", b =>
                {
                    b.HasOne("XakUjin2025.Apartment", "Apartment")
                        .WithMany("Signals")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("XakUjin2025.Apartment", b =>
                {
                    b.Navigation("Signals");
                });

            modelBuilder.Entity("XakUjin2025.ApplicationUser", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("XakUjin2025.Home", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("XakUjin2025.Signal", b =>
                {
                    b.Navigation("Indications");
                });
#pragma warning restore 612, 618
        }
    }
}
